---

- name: deal with apt / deb image
  block:

    - name: Remove old docker packages
      apt:
        name: "{{ item }}"
        state: absent
      loop: "{{ ansible_remove_ec2_packages }}"
      become: true

    - name: Install packages
      apt:
        name: "{{ item }}"
        state: present
      loop: "{{ ansible_add_ec2_packages }}"
      become: true
      register: __install

    - name: Add an Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: true

    - name: Add specified repository into sources list
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present
      become: true

    - name: Install docker packages
      apt: 
        name: "{{ item }}"
        state: present
      loop: "{{ ansible_docker_ec2_packages }}"
      become: true
      register: __install

    - name: Debug install
      debug:
        msg: "{{ __install }}"
      when: ansible_ec2_debug == true

    - name: Ensure group docker exists
      group:
        name: docker
        state: present
      become: true

    - name: add {{ ansible_ec2_instance_user }} to docker group
      user:
        name: "{{ ansible_ec2_instance_user }}"
        groups: 
          - docker
      become: true

    - name: enable and start docker service
      systemd:
        name: docker
        enabled: true
        state: started
      become: true

  when: ansible_ec2_instance_user == 'ubuntu'



- name: deal with yum image
  block:

    - name: Remove old docker packages
      yum:
        name: "{{ item }}"
        state: absent
      loop: "{{ ansible_remove_ec2_packages }}"
      become: true

    - name: Install packages
      yum:
        name: "{{ item }}"
        state: present
      loop: "{{ ansible_add_ec2_packages }}"
      become: true
      register: __install

    - name: Install docker packages
      yum: 
        name: "{{ item }}"
        state: present
      loop: "{{ ansible_docker_ec2_packages }}"
      become: true
      register: __install

    - name: Debug install
      debug:
        msg: "{{ __install }}"
      when: ansible_ec2_debug == true

    - name: Ensure group docker exists
      group:
        name: docker
        state: present
      become: true

    - name: add {{ ansible_ec2_instance_user }} to docker group
      user:
        name: "{{ ansible_ec2_instance_user }}"
        groups: 
          - docker
      become: true

    - name: enable and start docker service
      systemd:
        name: docker
        enabled: true
        state: started
      become: true

  when: ansible_ec2_instance_user == 'ec2-user'

- name: Validate docker with ps
  block:

  - name: Docker ps
    shell:
      cmd: 'docker ps -a'
    become: true
    register: __docker_ps

  - name: Return docker ps output
    debug:
      msg: "{{ __docker_ps.stdout }}"
  
  when: ansible_ec2_debug == true

# - name: Create /etc/systemd/docker.service.d directory
#   file:
#     path: /etc/systemd/docker.service.d
#     state: directory
#     mode: '0755'
#     owner: root
#     group: root
#   become: true

# - name: Copy mount_flags.conf to /etc/systemd/docker.service.d/
#   copy:
#     src: files/mount_flags.conf
#     dest: /etc/systemd/docker.service.d/mount_flags.conf
#     mode: '0644'
#     owner: root
#     group: root
#   become: true

# - name: Fix /var/lib shared error
#   shell: 'mount --make-rshared /'
#   become: true

- name: Enable sshd TCPForwarding
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#AllowTcpForwarding yes'
    line: 'AllowTcpForwarding yes'
  become: true
